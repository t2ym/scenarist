{"version":3,"sources":["Suite.js"],"names":["root","factory","define","amd","Suite","exports","_typeof","module","Function","toString","match","Error","e","_createClass","require","default","_classCallCheck","_possibleConstructorReturn","_inherits","this","target","description","arguments","length","undefined","_name","constructor","scope","classes","leafClasses","leafScenarios","branchScenarios","mixins","scopes","classSyntaxSupport","arrowFunctionSupport","key","get","value","name","replace","toLowerCase","f","allowUnicodeNames","message","tests","self","test","parseInt","split","map","getChain","proto","chain","unshift","Object","getPrototypeOf","isLeaf","scenario","i","debug","console","log","branch","_this","shift","join","generateClass","Array","isArray","forEach","item","generateClasses","prop","push","pop","_this2","expression","_checkIdentifier","c","prefix","window","subclass","base","__BASE_CLASS__","_BASE_CLASS__","__SUBCLASS__","__proto__","apply","_BASE_CLASS__2","updateLeafClasses","regeneratorRuntime","async","_context","prev","next","stop","element","type","trigger","condition","Promise","resolve","addEventListener","onEvent","event","Polymer","dom","rootTarget","removeEventListener","mark","steps","wrap","_context2","hasOwnProperty","uncamel","iteration","operation","checkpoint","ctor","delegateYield","_context3","_context10","testSuites","testClasses","suite","describe","_this5","all","s","_context4","abrupt","run","then","overrideToString","func","getOwnPropertyDescriptor","_loop","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","step","_context9","suiteSetup","before","_context5","awrap","setup","_loop2","parameters","it","_context7","skipAfterFailure","__failed","skip","call","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","done","err","return","_context8","t0","finish","suiteTeardown","after","_context6","teardown","set","last","o","keys","n","reduce","l","reconnectable","count","_permute","targets","len","j","swap","append","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","sub","result","list","_context11","cursor","k","tmp","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4"],"mappings":"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","file":"Suite.min.js","sourcesContent":["/*\n@license https://github.com/t2ym/scenarist/blob/master/LICENSE.md\nCopyright (c) 2016, Tetsuya Mori <t2y3141592@gmail.com>. All rights reserved.\n*/\n\n(function (root, factory) {\n\n  'use strict';\n\n  /* istanbul ignore if: AMD is not tested */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.Suite = root.Suite || factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n    try {\n      new Function('return class $$A$$ {}');\n      if (!module.exports.toString().match(/^class /)) {\n        throw new Error('Suite.min.js requires babel-runtime');\n      }\n    }\n    catch (e) {\n      // Supply Babel runtime helpers\n      module.exports._createClass = module.exports._createClass || require('babel-runtime/helpers/_create-class.js').default;\n      module.exports._classCallCheck = module.exports._classCallCheck || require('babel-runtime/helpers/_class-call-check.js').default;\n      module.exports._possibleConstructorReturn = module.exports._possibleConstructorReturn || require('babel-runtime/helpers/_possible-constructor-return.js').default;\n      module.exports._inherits = module.exports._inherits || require('babel-runtime/helpers/_inherits.js').default;\n    }\n  } else {\n    // Browser globals\n    root.Suite = root.Suite || factory();\n  }\n\n}(this, function () {\n// UMD Definition above, do not remove this line\n  'use strict';\n\nclass Suite {\n  static get reconnectable() { return true; }\n  static get skipAfterFailure() { return false; }\n  constructor(target, description = target + ' suite') {\n    if (Suite._name(this.constructor) === 'Suite') {\n      // suite instance\n      this.scope = target || '';\n      this.description = description;\n      this.classes = {};\n      this.leafClasses = {};\n      this.leafScenarios = {};\n      this.branchScenarios = {};\n      this.mixins = {};\n      this.constructor.scopes = this.constructor.scopes || {};\n      this.constructor.scopes[this.scope] = this;\n      this.classSyntaxSupport = true;\n      this.arrowFunctionSupport = true;\n      try {\n        new Function('return class A {}');\n      }\n      catch (e) {\n        \n        this.classSyntaxSupport = false;\n      }\n      if (!Suite.toString().match(/^class /)) {\n        \n        this.classSyntaxSupport = false; // Running as Suite.min.js\n      }\n      try {\n        new Function('return () => 1');\n      }\n      catch (e) {\n        \n        this.arrowFunctionSupport = false;\n      }\n    }\n    else {\n      // test instance\n      this.target = target;\n    }\n  }\n  uncamel(name) {\n    return name.replace(/([A-Z])/g, ' $1').replace(/_/g, ' ').replace(/[ ]{1,}/g, ' ').replace(/^ /, '').toLowerCase();\n  }\n  static _name(func) {\n    return (func.hasOwnProperty('name')\n      ? func.name\n      : func.toString().replace(/^[\\S\\s]*?function\\s*/, \"\").replace(/[\\s\\(\\/][\\S\\s]+$/, \"\")).replace(/^_?class$/, '');\n  }\n  _checkIdentifier(name) {\n    try {\n      let f = (new Function('return function ' + name + ' () {}'))();\n      if (f.name !== name || (!this.constructor.allowUnicodeNames && !f.name.match(/^[$\\w]*$/))) {\n        throw new Error(name + ' is defined as ' + f.name);\n      }\n    }\n    catch (e) {\n      throw new Error(this.constructor.name + '.' + this.scope + ':_checkIdentifier ' + name + ' is not a valid identifier ' + e.message);\n    }\n  }\n  set test(value) {\n    if (typeof value === 'function') {\n      let name = Suite._name(value);\n      if (name) {\n        // test class\n        if (this.classes[name]) {\n          // test class with the name already exists\n          throw new Error(this.constructor.name + '.' + this.scope + ': class ' + name + ' already exists');\n        }\n        else {\n          // register a new test class with the name\n          this.classes[name] = value;\n          this.updateLeafClasses(value);\n        }\n      }\n      else {\n        // test class mixin\n        name = Suite._name(value(null));\n        if (name) {\n          if (this.mixins[name]) {\n            // test class mixin with the name already exists\n            throw new Error(this.constructor.name + '.' + this.scope + ': class mixin ' + name + ' already exists');\n          }\n          else {\n            // register a new test class mixin with the name\n            this.mixins[name] = value;\n          }\n        }\n        else {\n          // no name for the test class mixin\n          throw new Error(this.constructor.name + '.' + this.scope + ': class mixin has no name ' + value.toString());\n        }\n      }\n    }\n    else if (typeof value === 'object') {\n      if (value) {\n        // branch object\n        this.generateClasses(value, []);\n      }\n      else {\n        throw new Error(this.constructor.name + '.' + this.scope + ': null object is not expected');\n      }\n    }\n  }\n  get test() {\n    let last;\n    // [ 'UnreconnectableTest', 'ReconnectableTest,ReconnectableTest,...', 'UnreconnectableTest', ...]\n    return (o => Object.keys(o).map(n => o[n]))(this.leafClasses)\n      .reduce((l, c) => ((c.reconnectable && last && last[0].reconnectable ? last.push(c) : l.push(last = [c])), l), [])\n      .map(l => l.map(c => Suite._name(c)).join(','));\n  }\n  testClasses(tests) {\n    let self = this;\n    return (typeof tests === 'number' || tests.match(/^[0-9]$/) ? self.test[parseInt(tests)] : tests).split(/,/).map((name) => {\n      if (!self.classes[name]) {\n        throw new Error('Suite.' + self.scope + ': Test ' + name + ' is not defined');\n      }\n      return self.classes[name];\n    });\n  }\n  updateLeafClasses(value) {\n    let name = Suite._name(value);\n    let isLeaf = true;\n    let scenario = '';\n    function getChain(proto) {\n      let chain = [];\n      while (Suite._name(proto) && Suite._name(proto) !== 'Suite') {\n        chain.unshift(Suite._name(proto));\n        proto = Object.getPrototypeOf(proto);\n      }\n      return chain;\n    }\n    let chain = getChain(value);\n    for (let i in chain) {\n      scenario = scenario ? scenario + ',' + chain[i] : chain[i];\n      if (i < chain.length - 1) {\n        if (!this.branchScenarios[scenario]) {\n          this.branchScenarios[scenario] = true;\n        }\n        if (this.leafClasses[chain[i]] &&\n            this.leafScenarios[chain[i]] === scenario) {\n          if (this.constructor.debug) { console.log('updateLeafClasses ' + name + ': trim a non-leaf class ' + chain[i] + ' with scenario ' + scenario); }\n          delete this.leafClasses[chain[i]];\n          delete this.leafScenarios[chain[i]];\n        }\n      }\n      else {\n        if (this.branchScenarios[scenario]) {\n          if (this.constructor.debug) { console.log('updateLeafClasses ' + name + ': ' + scenario + ' is not a leaf'); }\n          isLeaf = false;\n        }\n      }\n    }\n    if (isLeaf) {\n      this.leafClasses[name] = value;\n      this.leafScenarios[name] = scenario;\n    }\n  }\n  generateClasses(branch, chain) {\n    if (typeof branch === 'string') {\n      let description = branch.split(/;/);\n      if (description.length > 1) {\n        branch = description.shift();\n        description = description.join(';').replace(/^[\\s]*/, '');\n      }\n      else {\n        description = '';\n      }\n      if (this.constructor.debug) { console.log('string', branch || chain[chain.length - 1], chain, description); }\n      this.generateClass(branch, chain, description);\n    }\n    else if (typeof branch === 'object' && !Array.isArray(branch)) {\n      if (branch) {\n        for (let prop in branch) {\n          chain.push(prop);\n          this.generateClasses(branch[prop], chain);\n          chain.pop();\n        }\n      }\n      else {\n        if (this.constructor.debug) { console.log('null', branch, chain); }\n        this.generateClass(branch, chain);\n      }\n    }\n    else if (typeof branch === 'object' && Array.isArray(branch)) {\n      branch.forEach((item) => {\n        this.generateClasses(item, chain);\n      });\n    }\n    else {\n      throw new Error(this.constructor.name + '.' + this.scope + ': unknown branch type ' + typeof branch + branch);\n    }\n  }\n  generateClass(name, chain, description) {\n    let self = this;\n    let expression;\n    if (!(chain.length >= (chain[0] ? 1 : 2))) {\n      throw new Error(this.constructor.name + '.' + this.scope + ':generateClass invalid chain.length ' + chain.length);\n    }\n    if (!name) {\n      name = chain[chain.length - 1];\n    }\n    this._checkIdentifier(name);\n    if (!chain[0]) {\n      // class mixin\n      if (self.mixins[name]) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + name + ' already exists');\n      }\n      if (self.classes[name]) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass class ' + name + ' already exists');        \n      }\n      chain.forEach((c, i) => {\n        self._checkIdentifier(c);\n        if (i === 0) {\n          expression = 'base';\n        }\n        else if (self.mixins[c]) {\n          expression = 'self.mixins.' + c + '(' + expression + ')';\n        }\n        else {\n          throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + c + ' does not exist');\n        }\n      });\n      expression = self.arrowFunctionSupport\n        ? 'return (base) => ' + expression\n        : 'return function (base) { return ' + expression + '; }';\n      self.mixins[name] = (new Function('self', expression))(self);\n      if (self.constructor.debug) { console.log('generateClass mixins.' + name + ' = ' + expression); }\n    }\n    else {\n      // class\n      if (this.classes[name]) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass class ' + name + ' already exists');\n      }\n      if (this.mixins[name] && chain[chain.length - 1] !== name) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + name + ' already exists');\n      }\n      chain.forEach((c, i) => {\n        self._checkIdentifier(c);\n        if (i === 0) {\n          if (self.classes[c]) {\n            expression = 'self.classes.' + c;\n          }\n          else if ((new Function(self.constructor.name, 'return (typeof ' + c + ' === \"function\" && (new ' + c + '()) instanceof ' + self.constructor.name + ')'))(self.constructor)) {\n            expression = c;\n          }\n          else {\n            throw new Error(this.constructor.name + '.' + this.scope + ':generateClass global test class ' + c + ' does not exist');\n          }\n        }\n        else if (self.mixins[c]) {\n          expression = 'self.mixins.' + c + '(' + expression + ')';\n        }\n        else {\n          throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + c + ' does not exist');\n        }\n      });\n      if (description) {\n        description = description.replace(/\"/g,'\\\\\"').replace(/\\n/g, ' ');\n      }\n      let prefix = !this.classSyntaxSupport && typeof Suite._createClass === 'function' && typeof window !== 'object' ? 'self.constructor.' : '';\n      expression = chain.length === 1 && name === expression\n        ? 'return ' + name\n        : name === chain[chain.length - 1]\n          ? 'return ' + expression\n          : self.classSyntaxSupport\n            ? 'return class ' + name + ' extends ' + expression + (description ? ' { get description() { return \"' + description + '\"; } }' : ' {}')\n            : (function (subclass, base, description) { // generate ES5 class by manipulating transpiled func.toString()\n                return 'return (' +\n                  (() => { /* istanbul ignore next */\n                    return description\n                    ? function (__BASE_CLASS__) { return class __SUBCLASS__ extends __BASE_CLASS__ { get description() { return 314159265358; } } }\n                    : function (__BASE_CLASS__) { return class __SUBCLASS__ extends __BASE_CLASS__ {} }\n                  })().toString()\n                    .replace(/__cov_[^. ]*[.][a-z]\\[\\'[0-9]*\\'\\](\\[[0-9]*\\])?\\+\\+[;,]?/g, '') // trim istanbul coverage counters\n                    .replace(/__SUBCLASS__/g, subclass)\n                    .replace(/_inherits|_classCallCheck|_createClass|_possibleConstructorReturn/g, prefix + '$&')\n                    .replace(/ 314159265358;?/g, ' \"' + description + '\";')\n                  + ')(' + base + ');'\n              })(name, expression, description);\n      self.classes[name] = (new Function('self', expression))(self);\n      self.updateLeafClasses(self.classes[name]);\n      if (self.constructor.debug) { console.log('generateClass classes.' + name + ' = ' + expression); }\n    }\n  }\n  static repeat(target, count, subclass) {\n    let scenario = {};\n    if (count < 1) {\n      scenario = subclass;\n    }\n    else {\n      scenario[target] = subclass;\n      count--;\n      while (count-- > 0) {\n        scenario = {\n          [target]: scenario\n        };\n      }\n    }\n    return scenario;\n  }\n  static * _permute(targets, i = 0, result = {}, subclass = (list) => list.join('Then')) {\n    let len = targets.length;\n    let j;\n    function swap() {\n      if (j !== i) {\n        let tmp = targets[i];\n        targets[i] = targets[j];\n        targets[j] = tmp;\n      }\n    }\n    function append() {\n      // TODO: cache cursor\n      let cursor = result;\n      for (let k = 0; k < len; k++) {\n        if (!cursor[targets[k]]) {\n          if (k >= len - 1) {\n            cursor[targets[k]] = subclass(targets);\n          }\n          else {\n            cursor[targets[k]] = {};\n          }\n        }\n        cursor = cursor[targets[k]];\n      }\n    }\n    if (i >= len - 1) {\n      yield targets;\n      append();\n    }\n    else {\n      for (j = i; j < len; j++) {\n        swap();\n        for (let sub of this._permute(targets, i + 1, result)) {\n          yield targets;\n          append();\n        }\n        swap();\n      }\n    }\n  }\n  static permute(targets, subclass) {\n    let result = {};\n    for (let chain of this._permute(targets, 0, result, subclass)) {}\n    return result;\n  }\n  async setup() {\n  }\n  forEvent(element, type, trigger, condition) {\n    return new Promise(resolve => {\n      element.addEventListener(type, function onEvent(event) {\n        if (!condition ||\n            (typeof condition === 'boolean' && condition && Polymer.dom(event).rootTarget === element) ||\n            (typeof condition === 'function' && condition(element, type, event))) {\n          element.removeEventListener(type, onEvent);\n          resolve(event);\n        }\n      });\n      if (trigger) {\n        trigger();\n      }\n    })\n  }\n  * scenario() {\n    // trick to unveil overridden methods\n    let steps = [];\n    let proto = Object.getPrototypeOf(this);\n    while (proto.constructor.name && proto.constructor.name !== 'Object') {\n      steps.unshift({\n        name: proto.hasOwnProperty('description') ? proto.description : this.uncamel(Suite._name(proto.constructor)),\n        iteration: proto.hasOwnProperty('iteration') ? proto.iteration : undefined,\n        operation: proto.hasOwnProperty('operation') ? proto.operation : undefined,\n        checkpoint: proto.hasOwnProperty('checkpoint') ? proto.checkpoint: undefined,\n        ctor: proto.constructor\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    yield * steps;\n  }\n  async teardown() {\n  }\n  async run(classes, target) {\n    // TODO: return a Promise object?\n    let self = this;\n    if (Suite._name(self.constructor) === 'Suite') {\n      // Suite Runner\n      let testSuites = [];\n      if (typeof classes === 'number' || typeof classes === 'string') {\n        // Number 0\n        // Number string '0'\n        // CSV string 'Test1,Test2'\n        testSuites = self.testClasses(classes);\n      }\n      else if (typeof classes === 'object' && Array.isArray(classes)) {\n        // String Array [ 'Test1', 'Test2' ]\n        // Class Array [ Test1, Test2 ]\n        // TODO: handle errors if item is neither a string nor a class\n        testSuites = classes.map((item) => typeof item === 'string' ? self.classes[item] : item);\n      }\n      else if (typeof classes === 'object' && !Array.isArray(classes) && classes) {\n        // Object { Test1: Test1, Test2: Test2 } - property names are discarded\n        for (let c in classes) {\n          testSuites.push(classes[c]);\n        }\n      }\n      (typeof suite === 'function' ? suite : describe)(self.description || (self.scope + ' suite'), function() {\n        // Note: Not waiting for async forEach so that each subsuite runs under the parent suite\n        Promise.all(testSuites.map(async (s) => (new s(target)).run()))\n          .then(() => {\n            if (self.constructor.debug) { console.log(self.description + ' done for ', classes); }\n          });\n      });\n    }\n    else {\n      // Scenario Runner\n      let overrideToString = (func, ctor) => { func.toString = () => ctor.toString(); return func; };\n      (typeof suite === 'function' ? suite : describe)(Object.getOwnPropertyDescriptor(Object.getPrototypeOf(self), 'description') ? self.description : self.uncamel(Suite._name(self.constructor)), async function () {\n        (typeof suiteSetup === 'function' ? suiteSetup : before)(async function () {\n          await self.setup();\n        });\n\n        for (let step of self.scenario()) {\n          if (step.operation || step.checkpoint) {\n            if (step.iteration) {\n              // suite() has to be commented out since subsuites are executed after all the other sibling tests\n              //suite(step.name + ' iterations', async function () {\n                for (let parameters of step.iteration.apply(self)) {\n                  (typeof test === 'function' ? test : it)(parameters.name ?\n                        (typeof parameters.name === 'function' ? parameters.name(parameters) : parameters.name)\n                        : step.name, overrideToString(async function() {\n                    if (self.constructor.skipAfterFailure && self.__failed) {\n                      return this.skip();\n                    }\n                    else {\n                      self.__failed = true;\n                      if (step.operation) {\n                        await step.operation.call(self, parameters);\n                      }\n                      if (step.checkpoint) {\n                        await step.checkpoint.call(self, parameters);\n                      }\n                      self.__failed = false;\n                    }\n                  }, step.ctor));\n                }\n              //});\n            }\n            else {\n              (typeof test === 'function' ? test : it)(step.name, overrideToString(async function() {\n                if (self.constructor.skipAfterFailure && self.__failed) {\n                  return this.skip();\n                }\n                else {\n                  self.__failed = true;\n                  if (step.operation) {\n                    await step.operation.call(self);\n                  }\n                  if (step.checkpoint) {\n                    await step.checkpoint.call(self);\n                  }\n                  self.__failed = false;\n                }\n              }, step.ctor));\n            }\n          }\n        }\n\n        (typeof suiteTeardown === 'function' ? suiteTeardown : after)(async function () {\n          await self.teardown();\n        });\n      });\n    }\n  }\n}\n\n  return Suite;\n})); // UMD Definition\n"]}