{"version":3,"sources":["Suite.js"],"names":["root","factory","define","amd","Suite","exports","_typeof","module","Function","e","_createClass","require","default","_classCallCheck","_possibleConstructorReturn","_inherits","this","target","description","arguments","length","undefined","_name","constructor","scope","classes","leafClasses","branchScenarios","mixins","scopes","classSyntaxSupport","arrowFunctionSupport","toString","match","key","get","value","name","replace","toLowerCase","tests","self","test","parseInt","split","map","Error","proto","chain","isLeaf","scenario","unshift","Object","getPrototypeOf","i","branch","_this","shift","join","debug","console","log","generateClass","Array","isArray","forEach","item","generateClasses","prop","push","pop","_this2","expression","c","prefix","window","subclass","base","__BASE_CLASS__","_BASE_CLASS__","__SUBCLASS__","__proto__","apply","_BASE_CLASS__2","updateLeafClasses","regeneratorRuntime","async","_context","prev","next","stop","element","type","trigger","condition","Promise","resolve","addEventListener","onEvent","event","Polymer","dom","rootTarget","removeEventListener","mark","steps","wrap","_context2","hasOwnProperty","uncamel","iteration","operation","checkpoint","ctor","delegateYield","_context3","_context10","testSuites","testClasses","suite","describe","_this5","all","s","_context4","abrupt","run","then","overrideToString","func","getOwnPropertyDescriptor","_loop","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","step","_context9","suiteSetup","before","_context5","awrap","setup","_loop2","parameters","it","_context7","skipAfterFailure","__failed","skip","call","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","done","err","return","_context8","t0","finish","suiteTeardown","after","_context6","teardown","set","list","reconnectableList","reconnectable","last","l","count","_permute","targets","len","j","swap","append","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","sub","result","_context11","cursor","k","tmp","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4"],"mappings":"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","file":"Suite.min.js","sourcesContent":["/*\n@license https://github.com/t2ym/scenarist/blob/master/LICENSE.md\nCopyright (c) 2016, Tetsuya Mori <t2y3141592@gmail.com>. All rights reserved.\n*/\n\n(function (root, factory) {\n\n  'use strict';\n\n  /* istanbul ignore if: AMD is not tested */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.Suite = root.Suite || factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n    try {\n      new Function('return class $$A$$ {}');\n    }\n    catch (e) {\n      // Supply Babel runtime helpers\n      module.exports._createClass = module.exports._createClass || require('babel-runtime/helpers/_create-class.js').default;\n      module.exports._classCallCheck = module.exports._classCallCheck || require('babel-runtime/helpers/_class-call-check.js').default;\n      module.exports._possibleConstructorReturn = module.exports._possibleConstructorReturn || require('babel-runtime/helpers/_possible-constructor-return.js').default;\n      module.exports._inherits = module.exports._inherits || require('babel-runtime/helpers/_inherits.js').default;\n    }\n  } else {\n    // Browser globals\n    root.Suite = root.Suite || factory();\n  }\n\n}(this, function () {\n// UMD Definition above, do not remove this line\n  'use strict';\n\nclass Suite {\n  static get reconnectable() { return true; }\n  static get skipAfterFailure() { return false; }\n  constructor(target, description = target + ' suite') {\n    if (Suite._name(this.constructor) === 'Suite') {\n      // suite instance\n      this.scope = target || '';\n      this.description = description;\n      this.classes = {};\n      this.leafClasses = {};\n      this.branchScenarios = {};\n      this.mixins = {};\n      this.constructor.scopes = this.constructor.scopes || {};\n      this.constructor.scopes[this.scope] = this;\n      this.classSyntaxSupport = true;\n      this.arrowFunctionSupport = true;\n      try {\n        new Function('return class A {}');\n      }\n      catch (e) {\n        this.classSyntaxSupport = false;\n      }\n      if (!Suite.toString().match(/^class /)) {\n        this.classSyntaxSupport = false; // Running as Suite.min.js\n      }\n      try {\n        new Function('return () => 1');\n      }\n      catch (e) {\n        this.arrowFunctionSupport = false;\n      }\n    }\n    else {\n      // test instance\n      this.target = target;\n    }\n  }\n  uncamel(name) {\n    return name.replace(/([A-Z])/g, ' $1').replace(/_/g, ' ').replace(/[ ]{1,}/g, ' ').replace(/^ /, '').toLowerCase();\n  }\n  static _name(func) {\n    return (func.hasOwnProperty('name')\n      ? func.name\n      : func.toString().replace(/^[\\S\\s]*?function\\s*/, \"\").replace(/[\\s\\(\\/][\\S\\s]+$/, \"\")).replace(/^_?class$/, '');\n  }\n  set test(value) {\n    if (typeof value === 'function') {\n      let name = Suite._name(value);\n      if (name) {\n        // test class\n        if (this.classes[name]) {\n          // test class with the name already exists\n          throw new Error(this.constructor.name + '.' + this.scope + ': class ' + name + ' already exists');\n        }\n        else {\n          // register a new test class with the name\n          this.classes[name] = value;\n          this.updateLeafClasses(value);\n        }\n      }\n      else {\n        // test class mixin\n        name = Suite._name(value(null));\n        if (name) {\n          if (this.mixins[name]) {\n            // test class mixin with the name already exists\n            throw new Error(this.constructor.name + '.' + this.scope + ': class mixin ' + name + ' already exists');\n          }\n          else {\n            // register a new test class mixin with the name\n            this.mixins[name] = value;\n          }\n        }\n        else {\n          // no name for the test class mixin\n          throw new Error(this.constructor.name + '.' + this.scope + ': class mixin has no name ' + value.toString());\n        }\n      }\n    }\n    else if (typeof value === 'object') {\n      if (value) {\n        // branch object\n        this.generateClasses(value, []);\n      }\n      else {\n        throw new Error(this.constructor.name + '.' + this.scope + ': null object is not expected');\n      }\n    }\n  }\n  get test() {\n    let list = [];\n    for (let c in this.leafClasses) {\n      list.push(this.leafClasses[c]);\n    }\n    let reconnectableList = [];\n    for (let i in list) {\n      if (list[i].reconnectable) {\n        if (reconnectableList.length === 0) {\n          reconnectableList.push([list[i]]);\n        }\n        else {\n          let last = reconnectableList[reconnectableList.length - 1];\n          if (last.length === 0) {\n            last.push(list[i]);\n          }\n          else {\n            if (last[last.length - 1].reconnectable) {\n              last.push(list[i]);\n            }\n            else {\n              reconnectableList.push([list[i]]);\n            }\n          }\n        }\n      }\n      else {\n        reconnectableList.push([list[i]]);\n      }\n    }\n    // [ 'UnreconnectableTest', 'ReconnectableTest,ReconnectableTest,...', 'UnreconnectableTest', ...]\n    return reconnectableList.map(l => l.map(c => Suite._name(c)).join(','));\n  }\n  testClasses(tests) {\n    let self = this;\n    return (typeof tests === 'number' || tests.match(/^[0-9]$/) ? self.test[parseInt(tests)] : tests).split(/,/).map((name) => {\n      if (!self.classes[name]) {\n        throw new Error('Suite.' + self.scope + ': Test ' + name + ' is not defined');\n      }\n      return self.classes[name];\n    });\n  }\n  updateLeafClasses(value) {\n    let proto = value;\n    let chain = [];\n    let name = Suite._name(proto);\n    let isLeaf = true;\n    let scenario = '';\n    while (Suite._name(proto) && Suite._name(proto) !== 'Suite') {\n      chain.unshift(Suite._name(proto));\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (let i in chain) {\n      scenario = scenario ? scenario + ',' + chain[i] : chain[i];\n      if (i < chain.length - 1) {\n        if (!this.branchScenarios[scenario]) {\n          this.branchScenarios[scenario] = true;\n        }\n        if (this.leafClasses[chain[i]]) {\n          delete this.leafClasses[chain[i]];\n        }\n      }\n      else {\n        if (this.branchScenarios[scenario]) {\n          isLeaf = false;\n        }\n      }\n    }\n    if (isLeaf) {\n      this.leafClasses[name] = value;\n    }\n  }\n  generateClasses(branch, chain) {\n    if (typeof branch === 'string') {\n      let description = branch.split(/;/);\n      if (description.length > 1) {\n        branch = description.shift();\n        description = description.join(';').replace(/^[\\s]*/, '');\n      }\n      else {\n        description = '';\n      }\n      if (this.constructor.debug) { console.log('string', branch || chain[chain.length - 1], chain, description); }\n      this.generateClass(branch, chain, description);\n    }\n    else if (typeof branch === 'object' && !Array.isArray(branch)) {\n      if (branch) {\n        for (let prop in branch) {\n          chain.push(prop);\n          this.generateClasses(branch[prop], chain);\n          chain.pop();\n        }\n      }\n      else {\n        if (this.constructor.debug) { console.log('null', branch, chain); }\n        this.generateClass(branch, chain);\n      }\n    }\n    else if (typeof branch === 'object' && Array.isArray(branch)) {\n      branch.forEach((item) => {\n        this.generateClasses(item, chain);\n      });\n    }\n    else {\n      throw new Error(this.constructor.name + '.' + this.scope + ': unknown branch type ' + typeof branch + branch);\n    }\n  }\n  generateClass(name, chain, description) {\n    let self = this;\n    let expression;\n    if (!(chain.length >= (chain[0] ? 1 : 2))) {\n      throw new Error(this.constructor.name + '.' + this.scope + ':generateClass invalid chain.length ' + chain.length);\n    }\n    if (!name) {\n      name = chain[chain.length - 1];\n    }\n    if (!chain[0]) {\n      // class mixin\n      if (self.mixins[name]) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + name + ' already exists');\n      }\n      chain.forEach((c, i) => {\n        if (i === 0) {\n          expression = 'base';\n        }\n        else if (self.mixins[c]) {\n          expression = 'self.mixins.' + c + '(' + expression + ')';\n        }\n        else {\n          throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + c + ' does not exist');\n        }\n      });\n      expression = self.arrowFunctionSupport\n        ? 'return (base) => ' + expression\n        : 'return function (base) { return ' + expression + '; }';\n      self.mixins[name] = (new Function('self', expression))(self);\n      if (self.constructor.debug) { console.log('generateClass mixins.' + name + ' = ' + expression); }\n    }\n    else {\n      // class\n      if (this.classes[name]) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass class ' + name + ' already exists');\n      }\n      chain.forEach((c, i) => {\n        if (i === 0) {\n          if (self.classes[c]) {\n            expression = 'self.classes.' + c;\n          }\n          else if ((new Function('return (typeof ' + c + ' === \"function\" && (new ' + c + '()) instanceof ' + self.constructor.name + ')'))()) {\n            expression = c;\n          }\n          else {\n            throw new Error(this.constructor.name + '.' + this.scope + ':generateClass global test class ' + c + ' does not exist');\n          }\n        }\n        else if (self.mixins[c]) {\n          expression = 'self.mixins.' + c + '(' + expression + ')';\n        }\n        else {\n          throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + c + ' does not exist');\n        }\n      });\n      if (description) {\n        description = description.replace(/\"/g,'\\\\\"').replace(/\\n/g, ' ');\n      }\n      let prefix = !this.classSyntaxSupport && typeof Suite._createClass === 'function' && typeof window !== 'object' ? 'self.constructor.' : '';\n      expression = chain.length === 1 && name === expression\n        ? 'return ' + name\n        : name === chain[chain.length - 1]\n          ? 'return ' + expression\n          : self.classSyntaxSupport\n            ? 'return class ' + name + ' extends ' + expression + (description ? ' { get description() { return \"' + description + '\"; } }' : ' {}')\n            : (function (subclass, base, description) { // generate ES5 class by manipulating transpiled func.toString()\n                return 'return (' +\n                  (description\n                    ? function (__BASE_CLASS__) { return class __SUBCLASS__ extends __BASE_CLASS__ { get description() { return 314159265358; } } }\n                    : function (__BASE_CLASS__) { return class __SUBCLASS__ extends __BASE_CLASS__ {} }\n                  ).toString()\n                    .replace(/__cov_[^. ]*[.][a-z]\\[\\'[0-9]*\\'\\](\\[[0-9]*\\])?\\+\\+[;,]?/g, '') // trim istanbul coverage counters\n                    .replace(/__SUBCLASS__/g, subclass)\n                    .replace(/_inherits|_classCallCheck|_createClass|_possibleConstructorReturn/g, prefix + '$&')\n                    .replace(/ 314159265358;?/g, ' \"' + description + '\";')\n                  + ')(' + base + ');'\n              })(name, expression, description);\n      self.classes[name] = (new Function('self', expression))(self);\n      self.updateLeafClasses(self.classes[name]);\n      if (self.constructor.debug) { console.log('generateClass classes.' + name + ' = ' + expression); }\n    }\n  }\n  static repeat(target, count, subclass) {\n    let scenario = {};\n    if (count < 1) {\n      scenario = subclass;\n    }\n    else {\n      scenario[target] = subclass;\n      count--;\n      while (count-- > 0) {\n        scenario = {\n          [target]: scenario\n        };\n      }\n    }\n    return scenario;\n  }\n  static * _permute(targets, i = 0, result = {}, subclass = (list) => list.join('Then')) {\n    let len = targets.length;\n    let j;\n    function swap() {\n      if (j !== i) {\n        let tmp = targets[i];\n        targets[i] = targets[j];\n        targets[j] = tmp;\n      }\n    }\n    function append() {\n      // TODO: cache cursor\n      let cursor = result;\n      for (let k = 0; k < len; k++) {\n        if (!cursor[targets[k]]) {\n          if (k >= len - 1) {\n            cursor[targets[k]] = subclass(targets);\n          }\n          else {\n            cursor[targets[k]] = {};\n          }\n        }\n        cursor = cursor[targets[k]];\n      }\n    }\n    if (i >= len - 1) {\n      yield targets;\n      append();\n    }\n    else {\n      for (j = i; j < len; j++) {\n        swap();\n        for (let sub of this._permute(targets, i + 1, result)) {\n          yield targets;\n          append();\n        }\n        swap();\n      }\n    }\n  }\n  static permute(targets, subclass) {\n    let result = {};\n    for (let chain of this._permute(targets, 0, result, subclass)) {}\n    return result;\n  }\n  async setup() {\n  }\n  forEvent(element, type, trigger, condition) {\n    return new Promise(resolve => {\n      element.addEventListener(type, function onEvent(event) {\n        if (!condition ||\n            (typeof condition === 'boolean' && condition && Polymer.dom(event).rootTarget === element) ||\n            (typeof condition === 'function' && condition(element, type, event))) {\n          element.removeEventListener(type, onEvent);\n          resolve(event);\n        }\n      });\n      if (trigger) {\n        trigger();\n      }\n    })\n  }\n  * scenario() {\n    // trick to unveil overridden methods\n    let steps = [];\n    let proto = Object.getPrototypeOf(this);\n    while (proto.constructor.name && proto.constructor.name !== 'Object') {\n      steps.unshift({\n        name: proto.hasOwnProperty('description') ? proto.description : this.uncamel(Suite._name(proto.constructor)),\n        iteration: proto.hasOwnProperty('iteration') ? proto.iteration : undefined,\n        operation: proto.hasOwnProperty('operation') ? proto.operation : undefined,\n        checkpoint: proto.hasOwnProperty('checkpoint') ? proto.checkpoint: undefined,\n        ctor: proto.constructor\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    yield * steps;\n  }\n  async teardown() {\n  }\n  async run(classes, target) {\n    // TODO: return a Promise object?\n    let self = this;\n    if (Suite._name(self.constructor) === 'Suite') {\n      // Suite Runner\n      let testSuites = [];\n      if (typeof classes === 'number' || typeof classes === 'string') {\n        // Number 0\n        // Number string '0'\n        // CSV string 'Test1,Test2'\n        testSuites = self.testClasses(classes);\n      }\n      else if (typeof classes === 'object' && Array.isArray(classes)) {\n        // String Array [ 'Test1', 'Test2' ]\n        // Class Array [ Test1, Test2 ]\n        // TODO: handle errors if item is neither a string nor a class\n        testSuites = classes.map((item) => typeof item === 'string' ? self.classes[item] : item);\n      }\n      else if (typeof classes === 'object' && !Array.isArray(classes) && classes) {\n        // Object { Test1: Test1, Test2: Test2 } - property names are discarded\n        for (let c in classes) {\n          testSuites.push(classes[c]);\n        }\n      }\n      (typeof suite === 'function' ? suite : describe)(self.description || (self.scope + ' suite'), function() {\n        // Note: Not waiting for async forEach so that each subsuite runs under the parent suite\n        Promise.all(testSuites.map(async (s) => (new s(target)).run()))\n          .then(() => {\n            if (self.constructor.debug) { console.log(self.description + ' done for ', classes); }\n          });\n      });\n    }\n    else {\n      // Scenario Runner\n      let overrideToString = (func, ctor) => { func.toString = () => ctor.toString(); return func; };\n      (typeof suite === 'function' ? suite : describe)(Object.getOwnPropertyDescriptor(Object.getPrototypeOf(self), 'description') ? self.description : self.uncamel(Suite._name(self.constructor)), async function () {\n        (typeof suiteSetup === 'function' ? suiteSetup : before)(async function () {\n          await self.setup();\n        });\n\n        for (let step of self.scenario()) {\n          if (step.operation || step.checkpoint) {\n            if (step.iteration) {\n              // suite() has to be commented out since subsuites are executed after all the other sibling tests\n              //suite(step.name + ' iterations', async function () {\n                for (let parameters of step.iteration.apply(self)) {\n                  (typeof test === 'function' ? test : it)(parameters.name ?\n                        (typeof parameters.name === 'function' ? parameters.name(parameters) : parameters.name)\n                        : step.name, overrideToString(async function() {\n                    if (self.constructor.skipAfterFailure && self.__failed) {\n                      this.skip();\n                      return;\n                    }\n                    self.__failed = true;\n                    if (step.operation) {\n                      await step.operation.call(self, parameters);\n                    }\n                    if (step.checkpoint) {\n                      await step.checkpoint.call(self, parameters);\n                    }\n                    self.__failed = false;\n                  }, step.ctor));\n                }\n              //});\n            }\n            else {\n              (typeof test === 'function' ? test : it)(step.name, overrideToString(async function() {\n                if (self.constructor.skipAfterFailure && self.__failed) {\n                  this.skip();\n                  return;\n                }\n                self.__failed = true;\n                if (step.operation) {\n                  await step.operation.call(self);\n                }\n                if (step.checkpoint) {\n                  await step.checkpoint.call(self);\n                }\n                self.__failed = false;\n              }, step.ctor));\n            }\n          }\n        }\n\n        (typeof suiteTeardown === 'function' ? suiteTeardown : after)(async function () {\n          await self.teardown();\n        });\n      });\n    }\n  }\n}\n\n  return Suite;\n})); // UMD Definition\n"]}