{"version":3,"sources":["Suite.js"],"names":["root","factory","define","amd","Suite","exports","_typeof","module","Function","toString","match","Error","e","_createClass","require","default","_classCallCheck","_possibleConstructorReturn","_inherits","this","target","description","arguments","length","undefined","_name","constructor","scope","classes","leafClasses","leafScenarios","branchScenarios","mixins","scopes","classSyntaxSupport","arrowFunctionSupport","key","get","value","name","replace","toLowerCase","f","message","tests","self","test","parseInt","split","map","getChain","proto","chain","unshift","Object","getPrototypeOf","isLeaf","scenario","i","debug","console","log","branch","_this","shift","join","generateClass","Array","isArray","forEach","item","generateClasses","prop","push","pop","_this2","expression","_checkIdentifier","c","prefix","window","subclass","base","__BASE_CLASS__","_BASE_CLASS__","__SUBCLASS__","__proto__","apply","_BASE_CLASS__2","updateLeafClasses","regeneratorRuntime","async","_context","prev","next","stop","element","type","trigger","condition","Promise","resolve","addEventListener","onEvent","event","Polymer","dom","rootTarget","removeEventListener","mark","steps","wrap","_context2","hasOwnProperty","uncamel","iteration","operation","checkpoint","ctor","delegateYield","_context3","_context10","testSuites","testClasses","suite","describe","_this5","all","s","_context4","abrupt","run","then","overrideToString","func","getOwnPropertyDescriptor","_loop","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","step","_context9","suiteSetup","before","_context5","awrap","setup","_loop2","parameters","it","_context7","skipAfterFailure","__failed","skip","call","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","done","err","return","_context8","t0","finish","suiteTeardown","after","_context6","teardown","set","last","o","keys","n","reduce","l","reconnectable","count","_permute","targets","len","j","swap","append","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","sub","result","list","_context11","cursor","k","tmp","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4"],"mappings":"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","file":"Suite.min.js","sourcesContent":["/*\n@license https://github.com/t2ym/scenarist/blob/master/LICENSE.md\nCopyright (c) 2016, Tetsuya Mori <t2y3141592@gmail.com>. All rights reserved.\n*/\n\n(function (root, factory) {\n\n  'use strict';\n\n  /* istanbul ignore if: AMD is not tested */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.Suite = root.Suite || factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n    try {\n      new Function('return class $$A$$ {}');\n      if (!module.exports.toString().match(/^class /)) {\n        throw new Error('Suite.min.js requires babel-runtime');\n      }\n    }\n    catch (e) {\n      // Supply Babel runtime helpers\n      module.exports._createClass = module.exports._createClass || require('babel-runtime/helpers/_create-class.js').default;\n      module.exports._classCallCheck = module.exports._classCallCheck || require('babel-runtime/helpers/_class-call-check.js').default;\n      module.exports._possibleConstructorReturn = module.exports._possibleConstructorReturn || require('babel-runtime/helpers/_possible-constructor-return.js').default;\n      module.exports._inherits = module.exports._inherits || require('babel-runtime/helpers/_inherits.js').default;\n    }\n  } else {\n    // Browser globals\n    root.Suite = root.Suite || factory();\n  }\n\n}(this, function () {\n// UMD Definition above, do not remove this line\n  'use strict';\n\nclass Suite {\n  static get reconnectable() { return true; }\n  static get skipAfterFailure() { return false; }\n  constructor(target, description = target + ' suite') {\n    if (Suite._name(this.constructor) === 'Suite') {\n      // suite instance\n      this.scope = target || '';\n      this.description = description;\n      this.classes = {};\n      this.leafClasses = {};\n      this.leafScenarios = {};\n      this.branchScenarios = {};\n      this.mixins = {};\n      this.constructor.scopes = this.constructor.scopes || {};\n      this.constructor.scopes[this.scope] = this;\n      this.classSyntaxSupport = true;\n      this.arrowFunctionSupport = true;\n      try {\n        new Function('return class A {}');\n      }\n      catch (e) {\n        \n        this.classSyntaxSupport = false;\n      }\n      if (!Suite.toString().match(/^class /)) {\n        \n        this.classSyntaxSupport = false; // Running as Suite.min.js\n      }\n      try {\n        new Function('return () => 1');\n      }\n      catch (e) {\n        \n        this.arrowFunctionSupport = false;\n      }\n    }\n    else {\n      // test instance\n      this.target = target;\n    }\n  }\n  uncamel(name) {\n    return name.replace(/([A-Z])/g, ' $1').replace(/_/g, ' ').replace(/[ ]{1,}/g, ' ').replace(/^ /, '').toLowerCase();\n  }\n  static _name(func) {\n    return (func.hasOwnProperty('name')\n      ? func.name\n      : func.toString().replace(/^[\\S\\s]*?function\\s*/, \"\").replace(/[\\s\\(\\/][\\S\\s]+$/, \"\")).replace(/^_?class$/, '');\n  }\n  _checkIdentifier(name) {\n    try {\n      let f = (new Function('return function ' + name + ' () {}'))();\n      if (f.name !== name || !f.name.match(/^[$\\w]*$/)) {\n        throw new Error(name + ' is defined as ' + f.name);\n      }\n    }\n    catch (e) {\n      throw new Error(this.constructor.name + '.' + this.scope + ':_checkIdentifier ' + name + ' is not a valid identifier ' + e.message);\n    }\n  }\n  set test(value) {\n    if (typeof value === 'function') {\n      let name = Suite._name(value);\n      if (name) {\n        // test class\n        if (this.classes[name]) {\n          // test class with the name already exists\n          throw new Error(this.constructor.name + '.' + this.scope + ': class ' + name + ' already exists');\n        }\n        else {\n          // register a new test class with the name\n          this.classes[name] = value;\n          this.updateLeafClasses(value);\n        }\n      }\n      else {\n        // test class mixin\n        name = Suite._name(value(null));\n        if (name) {\n          if (this.mixins[name]) {\n            // test class mixin with the name already exists\n            throw new Error(this.constructor.name + '.' + this.scope + ': class mixin ' + name + ' already exists');\n          }\n          else {\n            // register a new test class mixin with the name\n            this.mixins[name] = value;\n          }\n        }\n        else {\n          // no name for the test class mixin\n          throw new Error(this.constructor.name + '.' + this.scope + ': class mixin has no name ' + value.toString());\n        }\n      }\n    }\n    else if (typeof value === 'object') {\n      if (value) {\n        // branch object\n        this.generateClasses(value, []);\n      }\n      else {\n        throw new Error(this.constructor.name + '.' + this.scope + ': null object is not expected');\n      }\n    }\n  }\n  get test() {\n    let last;\n    // [ 'UnreconnectableTest', 'ReconnectableTest,ReconnectableTest,...', 'UnreconnectableTest', ...]\n    return (o => Object.keys(o).map(n => o[n]))(this.leafClasses)\n      .reduce((l, c) => ((c.reconnectable && last && last[0].reconnectable ? last.push(c) : l.push(last = [c])), l), [])\n      .map(l => l.map(c => Suite._name(c)).join(','));\n  }\n  testClasses(tests) {\n    let self = this;\n    return (typeof tests === 'number' || tests.match(/^[0-9]$/) ? self.test[parseInt(tests)] : tests).split(/,/).map((name) => {\n      if (!self.classes[name]) {\n        throw new Error('Suite.' + self.scope + ': Test ' + name + ' is not defined');\n      }\n      return self.classes[name];\n    });\n  }\n  updateLeafClasses(value) {\n    let name = Suite._name(value);\n    let isLeaf = true;\n    let scenario = '';\n    function getChain(proto) {\n      let chain = [];\n      while (Suite._name(proto) && Suite._name(proto) !== 'Suite') {\n        chain.unshift(Suite._name(proto));\n        proto = Object.getPrototypeOf(proto);\n      }\n      return chain;\n    }\n    let chain = getChain(value);\n    for (let i in chain) {\n      scenario = scenario ? scenario + ',' + chain[i] : chain[i];\n      if (i < chain.length - 1) {\n        if (!this.branchScenarios[scenario]) {\n          this.branchScenarios[scenario] = true;\n        }\n        if (this.leafClasses[chain[i]] &&\n            this.leafScenarios[chain[i]] === scenario) {\n          if (this.constructor.debug) { console.log('updateLeafClasses ' + name + ': trim a non-leaf class ' + chain[i] + ' with scenario ' + scenario); }\n          delete this.leafClasses[chain[i]];\n          delete this.leafScenarios[chain[i]];\n        }\n      }\n      else {\n        if (this.branchScenarios[scenario]) {\n          if (this.constructor.debug) { console.log('updateLeafClasses ' + name + ': ' + scenario + ' is not a leaf'); }\n          isLeaf = false;\n        }\n      }\n    }\n    if (isLeaf) {\n      this.leafClasses[name] = value;\n      this.leafScenarios[name] = scenario;\n    }\n  }\n  generateClasses(branch, chain) {\n    if (typeof branch === 'string') {\n      let description = branch.split(/;/);\n      if (description.length > 1) {\n        branch = description.shift();\n        description = description.join(';').replace(/^[\\s]*/, '');\n      }\n      else {\n        description = '';\n      }\n      if (this.constructor.debug) { console.log('string', branch || chain[chain.length - 1], chain, description); }\n      this.generateClass(branch, chain, description);\n    }\n    else if (typeof branch === 'object' && !Array.isArray(branch)) {\n      if (branch) {\n        for (let prop in branch) {\n          chain.push(prop);\n          this.generateClasses(branch[prop], chain);\n          chain.pop();\n        }\n      }\n      else {\n        if (this.constructor.debug) { console.log('null', branch, chain); }\n        this.generateClass(branch, chain);\n      }\n    }\n    else if (typeof branch === 'object' && Array.isArray(branch)) {\n      branch.forEach((item) => {\n        this.generateClasses(item, chain);\n      });\n    }\n    else {\n      throw new Error(this.constructor.name + '.' + this.scope + ': unknown branch type ' + typeof branch + branch);\n    }\n  }\n  generateClass(name, chain, description) {\n    let self = this;\n    let expression;\n    if (!(chain.length >= (chain[0] ? 1 : 2))) {\n      throw new Error(this.constructor.name + '.' + this.scope + ':generateClass invalid chain.length ' + chain.length);\n    }\n    if (!name) {\n      name = chain[chain.length - 1];\n    }\n    this._checkIdentifier(name);\n    if (!chain[0]) {\n      // class mixin\n      if (self.mixins[name]) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + name + ' already exists');\n      }\n      chain.forEach((c, i) => {\n        self._checkIdentifier(c);\n        if (i === 0) {\n          expression = 'base';\n        }\n        else if (self.mixins[c]) {\n          expression = 'self.mixins.' + c + '(' + expression + ')';\n        }\n        else {\n          throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + c + ' does not exist');\n        }\n      });\n      expression = self.arrowFunctionSupport\n        ? 'return (base) => ' + expression\n        : 'return function (base) { return ' + expression + '; }';\n      self.mixins[name] = (new Function('self', expression))(self);\n      if (self.constructor.debug) { console.log('generateClass mixins.' + name + ' = ' + expression); }\n    }\n    else {\n      // class\n      if (this.classes[name]) {\n        throw new Error(this.constructor.name + '.' + this.scope + ':generateClass class ' + name + ' already exists');\n      }\n      chain.forEach((c, i) => {\n        self._checkIdentifier(c);\n        if (i === 0) {\n          if (self.classes[c]) {\n            expression = 'self.classes.' + c;\n          }\n          else if ((new Function(self.constructor.name, 'return (typeof ' + c + ' === \"function\" && (new ' + c + '()) instanceof ' + self.constructor.name + ')'))(self.constructor)) {\n            expression = c;\n          }\n          else {\n            throw new Error(this.constructor.name + '.' + this.scope + ':generateClass global test class ' + c + ' does not exist');\n          }\n        }\n        else if (self.mixins[c]) {\n          expression = 'self.mixins.' + c + '(' + expression + ')';\n        }\n        else {\n          throw new Error(this.constructor.name + '.' + this.scope + ':generateClass mixin ' + c + ' does not exist');\n        }\n      });\n      if (description) {\n        description = description.replace(/\"/g,'\\\\\"').replace(/\\n/g, ' ');\n      }\n      let prefix = !this.classSyntaxSupport && typeof Suite._createClass === 'function' && typeof window !== 'object' ? 'self.constructor.' : '';\n      expression = chain.length === 1 && name === expression\n        ? 'return ' + name\n        : name === chain[chain.length - 1]\n          ? 'return ' + expression\n          : self.classSyntaxSupport\n            ? 'return class ' + name + ' extends ' + expression + (description ? ' { get description() { return \"' + description + '\"; } }' : ' {}')\n            : (function (subclass, base, description) { // generate ES5 class by manipulating transpiled func.toString()\n                return 'return (' +\n                  (() => { /* istanbul ignore next */\n                    return description\n                    ? function (__BASE_CLASS__) { return class __SUBCLASS__ extends __BASE_CLASS__ { get description() { return 314159265358; } } }\n                    : function (__BASE_CLASS__) { return class __SUBCLASS__ extends __BASE_CLASS__ {} }\n                  })().toString()\n                    .replace(/__cov_[^. ]*[.][a-z]\\[\\'[0-9]*\\'\\](\\[[0-9]*\\])?\\+\\+[;,]?/g, '') // trim istanbul coverage counters\n                    .replace(/__SUBCLASS__/g, subclass)\n                    .replace(/_inherits|_classCallCheck|_createClass|_possibleConstructorReturn/g, prefix + '$&')\n                    .replace(/ 314159265358;?/g, ' \"' + description + '\";')\n                  + ')(' + base + ');'\n              })(name, expression, description);\n      self.classes[name] = (new Function('self', expression))(self);\n      self.updateLeafClasses(self.classes[name]);\n      if (self.constructor.debug) { console.log('generateClass classes.' + name + ' = ' + expression); }\n    }\n  }\n  static repeat(target, count, subclass) {\n    let scenario = {};\n    if (count < 1) {\n      scenario = subclass;\n    }\n    else {\n      scenario[target] = subclass;\n      count--;\n      while (count-- > 0) {\n        scenario = {\n          [target]: scenario\n        };\n      }\n    }\n    return scenario;\n  }\n  static * _permute(targets, i = 0, result = {}, subclass = (list) => list.join('Then')) {\n    let len = targets.length;\n    let j;\n    function swap() {\n      if (j !== i) {\n        let tmp = targets[i];\n        targets[i] = targets[j];\n        targets[j] = tmp;\n      }\n    }\n    function append() {\n      // TODO: cache cursor\n      let cursor = result;\n      for (let k = 0; k < len; k++) {\n        if (!cursor[targets[k]]) {\n          if (k >= len - 1) {\n            cursor[targets[k]] = subclass(targets);\n          }\n          else {\n            cursor[targets[k]] = {};\n          }\n        }\n        cursor = cursor[targets[k]];\n      }\n    }\n    if (i >= len - 1) {\n      yield targets;\n      append();\n    }\n    else {\n      for (j = i; j < len; j++) {\n        swap();\n        for (let sub of this._permute(targets, i + 1, result)) {\n          yield targets;\n          append();\n        }\n        swap();\n      }\n    }\n  }\n  static permute(targets, subclass) {\n    let result = {};\n    for (let chain of this._permute(targets, 0, result, subclass)) {}\n    return result;\n  }\n  async setup() {\n  }\n  forEvent(element, type, trigger, condition) {\n    return new Promise(resolve => {\n      element.addEventListener(type, function onEvent(event) {\n        if (!condition ||\n            (typeof condition === 'boolean' && condition && Polymer.dom(event).rootTarget === element) ||\n            (typeof condition === 'function' && condition(element, type, event))) {\n          element.removeEventListener(type, onEvent);\n          resolve(event);\n        }\n      });\n      if (trigger) {\n        trigger();\n      }\n    })\n  }\n  * scenario() {\n    // trick to unveil overridden methods\n    let steps = [];\n    let proto = Object.getPrototypeOf(this);\n    while (proto.constructor.name && proto.constructor.name !== 'Object') {\n      steps.unshift({\n        name: proto.hasOwnProperty('description') ? proto.description : this.uncamel(Suite._name(proto.constructor)),\n        iteration: proto.hasOwnProperty('iteration') ? proto.iteration : undefined,\n        operation: proto.hasOwnProperty('operation') ? proto.operation : undefined,\n        checkpoint: proto.hasOwnProperty('checkpoint') ? proto.checkpoint: undefined,\n        ctor: proto.constructor\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    yield * steps;\n  }\n  async teardown() {\n  }\n  async run(classes, target) {\n    // TODO: return a Promise object?\n    let self = this;\n    if (Suite._name(self.constructor) === 'Suite') {\n      // Suite Runner\n      let testSuites = [];\n      if (typeof classes === 'number' || typeof classes === 'string') {\n        // Number 0\n        // Number string '0'\n        // CSV string 'Test1,Test2'\n        testSuites = self.testClasses(classes);\n      }\n      else if (typeof classes === 'object' && Array.isArray(classes)) {\n        // String Array [ 'Test1', 'Test2' ]\n        // Class Array [ Test1, Test2 ]\n        // TODO: handle errors if item is neither a string nor a class\n        testSuites = classes.map((item) => typeof item === 'string' ? self.classes[item] : item);\n      }\n      else if (typeof classes === 'object' && !Array.isArray(classes) && classes) {\n        // Object { Test1: Test1, Test2: Test2 } - property names are discarded\n        for (let c in classes) {\n          testSuites.push(classes[c]);\n        }\n      }\n      (typeof suite === 'function' ? suite : describe)(self.description || (self.scope + ' suite'), function() {\n        // Note: Not waiting for async forEach so that each subsuite runs under the parent suite\n        Promise.all(testSuites.map(async (s) => (new s(target)).run()))\n          .then(() => {\n            if (self.constructor.debug) { console.log(self.description + ' done for ', classes); }\n          });\n      });\n    }\n    else {\n      // Scenario Runner\n      let overrideToString = (func, ctor) => { func.toString = () => ctor.toString(); return func; };\n      (typeof suite === 'function' ? suite : describe)(Object.getOwnPropertyDescriptor(Object.getPrototypeOf(self), 'description') ? self.description : self.uncamel(Suite._name(self.constructor)), async function () {\n        (typeof suiteSetup === 'function' ? suiteSetup : before)(async function () {\n          await self.setup();\n        });\n\n        for (let step of self.scenario()) {\n          if (step.operation || step.checkpoint) {\n            if (step.iteration) {\n              // suite() has to be commented out since subsuites are executed after all the other sibling tests\n              //suite(step.name + ' iterations', async function () {\n                for (let parameters of step.iteration.apply(self)) {\n                  (typeof test === 'function' ? test : it)(parameters.name ?\n                        (typeof parameters.name === 'function' ? parameters.name(parameters) : parameters.name)\n                        : step.name, overrideToString(async function() {\n                    if (self.constructor.skipAfterFailure && self.__failed) {\n                      return this.skip();\n                    }\n                    else {\n                      self.__failed = true;\n                      if (step.operation) {\n                        await step.operation.call(self, parameters);\n                      }\n                      if (step.checkpoint) {\n                        await step.checkpoint.call(self, parameters);\n                      }\n                      self.__failed = false;\n                    }\n                  }, step.ctor));\n                }\n              //});\n            }\n            else {\n              (typeof test === 'function' ? test : it)(step.name, overrideToString(async function() {\n                if (self.constructor.skipAfterFailure && self.__failed) {\n                  return this.skip();\n                }\n                else {\n                  self.__failed = true;\n                  if (step.operation) {\n                    await step.operation.call(self);\n                  }\n                  if (step.checkpoint) {\n                    await step.checkpoint.call(self);\n                  }\n                  self.__failed = false;\n                }\n              }, step.ctor));\n            }\n          }\n        }\n\n        (typeof suiteTeardown === 'function' ? suiteTeardown : after)(async function () {\n          await self.teardown();\n        });\n      });\n    }\n  }\n}\n\n  return Suite;\n})); // UMD Definition\n"]}